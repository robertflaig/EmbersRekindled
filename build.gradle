buildscript {
    repositories {
        // These repositories are only for Gradle plugins, put any other repositories in the repository block further below
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}

apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'idea'

version = '1.17-SNAPSHOT'
group = 'teamroots.embers' // http://maven.apache.org/guides/mini/guide-naming-conventions.html
//archivesBaseName = 'EmbersRekindled'
java {
    archivesBaseName = 'EmbersRekindled'
    toolchain.languageVersion = JavaLanguageVersion.of(8)
}
//sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

//sourceCompatibility = JavaVersion.VERSION_1_8
//targetCompatibility = JavaVersion.VERSION_1_8


//compileJava {
//    sourceCompatibility = targetCompatibility = "1.8"
//}

minecraft {
    mappings channel: 'stable', version: '60-1.15'
    //version = "1.15.2-31.2.57"
    //runDir = "run"
    //mappings = "snapshot_20171003"
    //useDepAts = true
    //makeObfSourceJar = false
    runs {
        client {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                EmbersRekindled {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            mods {
                EmbersRekindled {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')

            // Recommended logging data for a userdev environment
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'

            // Recommended logging level for the console
            property 'forge.logging.console.level', 'debug'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'EmbersRekindled', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                EmbersRekindled {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    maven {
        url "https://cursemaven.com"
    }
 //   maven { url "http://maven.bluexin.be/repository/snapshots/" }
 //   maven { url 'http://dvs1.progwml6.com/files/maven' }
 //   maven { url "https://maven.blamejared.com/" }
 //   maven { url "http://www.ryanliptak.com/maven/" }
 //   maven { url "https://maven.thiakil.com/" }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.15.2-31.2.57'
    implementation "curse.maven:CraftTweaker-239197:3794610"
    implementation "curse.maven:jei-238222:3245003"
    implementation "curse.maven:Baubles-227083:2518667"
    implementation fg.deobf("curse.maven:mysticalmechanics-300742:3006392")
}

jar {
    manifest {
        attributes 'FMLAT': 'embers_at.cfg'
    }
}

jar.finalizedBy('reobfJar')

//task deobfJar(type: Jar) {
//    from sourceSets.main.output
//    classifier "dev"
//}

//artifacts {
//    archives deobfJar
//}

/*processResources {
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'

        // replace version and mcversion
        expand 'version': project.version, 'mcversion': project.minecraft.version
    }

    // copy everything else except the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}*/

/*uploadArchives {
    repositories {
        mavenDeployer {
            if (project.hasProperty("maven_pass")) {
                println "Uploading to remote maven."
                repository(url: "http://maven_upload.covers1624.net/") {
                    authentication(userName: "bordlistian", password: project.getProperty("maven_pass"))
                }
            }
            pom {
                groupId = project.group
                artifactId = project.archivesBaseName
            }
        }
    }
}*/

//idea { module { inheritOutputDirs = true } }